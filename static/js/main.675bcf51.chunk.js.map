{"version":3,"sources":["ImageGalleryItem/ImageGalleryItem.module.css","Modal/Modal.module.css","ImageGallery/ImageGallery.module.css","Button/Button.module.css","Searchbar/Searchbar.jsx","Loader/Loader.jsx","Modal/Modal.jsx","ImageGalleryItem/ImageGalleryItem.jsx","ImageGallery/ImageGallery.jsx","Button/Button.jsx","services/api-services.js","FetchAPI/FetchAPI.jsx","App.js","reportWebVitals.js","index.js","Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchValue","setsearchValue","className","s","SearchForm","e","preventDefault","toast","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","autoComplete","autoFocus","placeholder","onChange","value","currentTarget","Spinner","color","height","width","timeout","modalRoot","document","querySelector","Modal","onClose","url","handleKeydown","keyCode","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","onClick","target","src","alt","ImageGalleryItem","images","showModal","setShowModal","setUrl","toggleModal","onGalleryItemClick","dataset","map","image","id","largeImageURL","webformatURL","ImageGalleryItemImage","ImageGallery","Button","api","fetchAPI","pageNum","KEY","fetch","then","res","ok","json","Promise","reject","Error","hits","FetchAPI","setImages","setPageNum","loading","setLoading","empty","setEmpty","error","setError","imgsArr","length","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","message","style","marginLeft","injectStyle","App","setSearchValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.675bcf51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1oHqA\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3Wgsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3q4yr\",\"Modal\":\"Modal_Modal__jcL_H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__KpgRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2ObI5\"};","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css';\r\n\r\n\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n    const [searchValue, setsearchValue] = useState('');\r\n\r\n    const clearState = () => {\r\n        return setsearchValue('')\r\n    }\r\n    \r\n    const handleInputChange = e => {\r\n        const { value } = e.currentTarget;\r\n\r\n        setsearchValue(value)\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (searchValue === '') {\r\n            return toast('Введите Ваш запрос!');\r\n        }\r\n\r\n        onSubmit(searchValue);\r\n        clearState();\r\n    }\r\n\r\n        return (\r\n            <header className={s.Searchbar}>\r\n                <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n                    <button type=\"submit\" className={s.SearchFormButton}>\r\n                    <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                    className={s.SearchFormInput}\r\n                    name=\"searchValue\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                    onChange={handleInputChange}\r\n                    value={searchValue}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function Spinner() {\r\n\r\n    return (\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n}","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\n\r\nfunction Modal({ onClose, url }) {\r\n\r\n    useEffect(() => {\r\n        \r\n        window.addEventListener('keydown', handleKeydown);\r\n\r\n        return () => {window.removeEventListener('keydown', handleKeydown);}\r\n    });\r\n\r\n    function handleKeydown(e) {\r\n            if (e.keyCode === 27) {\r\n            return onClose();\r\n            }\r\n    }\r\n\r\n    const handleBackdropClick = (e) => {\r\n        const { target, currentTarget } = e;\r\n\r\n        if (target === currentTarget) {\r\n            return onClose();\r\n        }\r\n    }\r\n\r\n        return createPortal(\r\n            <div className={s.Overlay} onClick={handleBackdropClick}>\r\n                <div className={s.Modal}>\r\n                    <img src={url} alt=\"\" />\r\n                </div>\r\n            </div>,\r\n            modalRoot\r\n        )\r\n}\r\n\r\n\r\nexport default Modal;","\r\nimport {useState} from 'react';\r\nimport s from './ImageGalleryItem.module.css';\r\nimport Modal from '../Modal/Modal';\r\n\r\n\r\nfunction ImageGalleryItem({ images }) {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [url, setUrl] = useState('');\r\n\r\n    const toggleModal = () => {\r\n    return setShowModal(!showModal)\r\n  }\r\n\r\n    const onGalleryItemClick = (e) => {\r\n        setUrl(e.currentTarget.dataset.url);\r\n        \r\n        toggleModal();\r\n}\r\n\r\n\r\n        return (\r\n            <>\r\n                {images.map(image => (\r\n                    <li className={s.ImageGalleryItem} key={image.id} onClick={onGalleryItemClick} id={image.id} data-url={image.largeImageURL}>\r\n                        <img src={image.webformatURL} alt={image.id} className={s.ImageGalleryItemImage} />\r\n                    </li>))}\r\n                {showModal && <Modal onClose={toggleModal} url={url}/> }\r\n            </>\r\n            );    \r\n}\r\n\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\n\r\nconst ImageGallery = ({ images }) => {\r\n    return (\r\n        <>\r\n        <ul className={s.ImageGallery}>\r\n            <ImageGalleryItem images={images}/>\r\n        </ul>\r\n        </>\r\n  );\r\n  }\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport s from './Button.module.css';\r\n\r\nfunction Button({ onClick }) {\r\n        return (\r\n            <button\r\n                onClick={onClick}\r\n                className={s.Button}\r\n                type=\"button\"\r\n            >\r\n                Load more\r\n            </button >\r\n    \r\n        );\r\n}\r\n\r\nexport default Button;","function fetchAPI(searchValue, pageNum, KEY, id) {\r\n    return fetch(`https://pixabay.com/api/?q=${searchValue}&page=${pageNum}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n              .then(res => {\r\n                  if (res.ok) {\r\n                      return res.json();\r\n                  }\r\n                    \r\n                  return Promise.reject(\r\n                      new Error('Вы что-то не так ввели:(')\r\n                  );\r\n              })\r\n              .then(res => { return res.hits })\r\n}\r\n\r\nconst api = { fetchAPI };\r\n\r\nexport default api;","\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Spinner from '../Loader/Loader';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Button from '../Button/Button';\r\nimport api from '../services/api-services';\r\n\r\nconst KEY = '22516164-f116a0b1efd134847fc29d1d4';\r\n\r\nfunction FetchAPI({ searchValue }) {\r\n    const [images, setImages] = useState([]);\r\n    const [pageNum, setPageNum] = useState(1);\r\n    \r\n    const [loading, setLoading] = useState(false);\r\n    const [empty, setEmpty] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    // const[status, setStatus] = useState('start');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!searchValue) {\r\n            return;\r\n        }\r\n        \r\n        setLoading(true);\r\n        setEmpty(false);\r\n          \r\n        api.fetchAPI(searchValue, pageNum, KEY)\r\n            .then(imgsArr => {\r\n                if (imgsArr.length <= 0) {\r\n                    setImages(null);\r\n                    empty(true);\r\n                    return;\r\n\r\n                } else {\r\n                    setImages(imgsArr)\r\n                }\r\n            })\r\n            .catch(error => setError(error))\r\n            .finally(setLoading(false));\r\n}, [searchValue]);\r\n\r\n    useEffect(() => {\r\n        if (pageNum === 1) {\r\n            return;\r\n        }\r\n\r\n        // console.log(\"pageNum: \" + pageNum, \"ebala: \" + prevPage)\r\n\r\n        setLoading(true);\r\n        setEmpty(false);\r\n\r\n        api.fetchAPI(searchValue, pageNum, KEY)\r\n            .then(imgsArr => {\r\n                if (imgsArr.length <= 0) {\r\n                    setImages([]);\r\n                    empty(true);\r\n                    return;\r\n                } else {\r\n                    setImages([...images, ...imgsArr]);\r\n                    return;\r\n                }\r\n            })\r\n            .catch(error => setError(error))\r\n            .finally(() => {\r\n                setLoading(false);\r\n            \r\n                window.scrollTo({\r\n                    top: document.documentElement.scrollHeight,\r\n                    behavior: 'smooth',\r\n                });\r\n            })\r\n        return;\r\n    }, [pageNum]);\r\n\r\n        \r\n    const onLoadMoreButtonClick = () => {\r\n        return setPageNum(pageNum + 1);\r\n    }\r\n\r\n        return (\r\n            <>\r\n            { error && <h1>{error.message}</h1> }\r\n            { empty && <div style={{marginLeft: '15px'}}>{`Sorry, we cant find anything about ${searchValue}`}</div> }\r\n            { loading && <Spinner /> }\r\n            { images && !empty && (<ImageGallery images={images} />) }\r\n            { images && images.length > 0 && !empty && (<Button onClick={onLoadMoreButtonClick} />) }\r\n            </>         \r\n  );\r\n}\r\n\r\nexport default FetchAPI;","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { injectStyle } from \"react-toastify/dist/inject-style\";\nimport './App.css';\nimport Searchbar from './Searchbar/Searchbar';\nimport FetchAPI from './FetchAPI/FetchAPI';\ninjectStyle();\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState('');\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={setSearchValue}/>\n        <FetchAPI searchValue={searchValue} />\n        <ToastContainer />\n      </div>\n  );\n  }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__kZZBw\",\"SearchForm\":\"Searchbar_SearchForm__1mHC8\",\"SearchFormButton\":\"Searchbar_SearchFormButton__32uqj\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1VG0k\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3vOpI\"};"],"sourceRoot":""}